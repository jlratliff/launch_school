{
  "title": "Simple regex example",
  "cells": [
    {
      "type": "text",
      "data": "<a href=\"https://launchschool.com/exercises/28ff0d86\">https://launchschool.com/exercises/28ff0d86</a>"
    },
    {
      "type": "code",
      "language": "ruby",
      "data": "def cleanup(text)\n  text.gsub(/[^a-z]/i, ' ').squeeze(' ')\nend"
    },
    {
      "type": "text",
      "data": "<p style=\"box-sizing: inherit; margin: 0px 0px 1.75rem; padding: 0px; font-family: myriad-pro, 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.75; text-rendering: optimizelegibility; word-wrap: break-word; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(251, 251, 251);\">Ah, the expressiveness of regular expressions. They can really help with messy text manipulation. They aren't always the wisest choice for understandable code, but they can save a lot of effort in some cases. This is one such case where the regular expression may be the best choice.</p><p style=\"box-sizing: inherit; margin: 0px 0px 1.75rem; padding: 0px; font-family: myriad-pro, 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.75; text-rendering: optimizelegibility; word-wrap: break-word; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(251, 251, 251);\">This method is quite simple: using the&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">gsub</code>&nbsp;call, it simply replaces all non-alphabetic characters in&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">text</code>&nbsp;with a space, then squeezes out all of the duplicate spaces. (The&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">squeeze</code>&nbsp;call could be replaced by another&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">gsub</code>&nbsp;call, but&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">squeeze</code>&nbsp;is easier to understand at a glance.)</p><p style=\"box-sizing: inherit; margin: 0px 0px 1.75rem; padding: 0px; font-family: myriad-pro, 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.75; text-rendering: optimizelegibility; word-wrap: break-word; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(251, 251, 251);\">If you are unfamiliar with regular expressions, the expression&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">/[^a-z]/i</code>&nbsp;is a regular expression that matches any character that is not an uppercase or lowercase letter. The&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">/i</code>&nbsp;part of this expression is what makes this expression case insensitive.&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">gsub</code>&nbsp;replaces all characters in&nbsp;<code style=\"box-sizing: inherit; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; font-size: 0.8125rem; border: 0px solid rgb(62, 66, 69); padding: 0.1875rem 0.375rem; display: inline; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; text-shadow: none;\">text</code>&nbsp;that match the regular expression in the 1st argument with the value in the 2nd argument.</p>"
    }
  ]
}